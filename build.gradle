buildscript {
    ext.repos = {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://repository.axelor.com/nexus/public/' }
    }
    repositories repos
    dependencies {
        classpath "com.axelor:axelor-gradle:5.0.0-SNAPSHOT" 
    }
}

allprojects {
	repositories repos
}

apply plugin: 'eclipse'
apply plugin: "com.axelor.app"

allprojects {
	apply plugin: 'eclipse'
	
	group = "com.axelor"
	version = "2.0.0"

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

def modules = new File('modules/abs').listFiles().findAll { dir ->
	new File(dir, 'build.gradle').exists()
}

def customModules = new File('modules').listFiles().findAll { dir ->
	new File(dir, 'build.gradle').exists()
}

modules.addAll(customModules)

axelor {
	title "Fnath :: ERP"
	description "Fnath Application"

	modules.each { dir ->
		install "$dir.name"
	}
}

dependencies {
	modules.each { dir ->
		compile project(":modules:$dir.name")
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = "3.4.1"
}


task("dataImport", type: JavaExec) {
	main = "com.axelor.apps.erp.Main"
	classpath = sourceSets.main.runtimeClasspath
	if(System.getProperty("exec.args") != null) {
		args System.getProperty("exec.args").split()
	}
}

build.doLast{
	archiveReports.execute()
	archiveImages.execute()
}

task archiveReports(type: Zip){
	from 'modules/abs'
    include '*/src/main/resources/reports/*'
	classifier 'reports'
	eachFile { fileCopyDetails ->
		fileCopyDetails.path = fileCopyDetails.path.replaceAll(".*/src/main/resources/reports/", '')
	}
	includeEmptyDirs = false
	destinationDir = new File("$buildDir/libs")
}

task archiveImages(type: Zip){
	from 'modules/abs'
    include '*/src/main/resources/data-demo/img/**'
	include '*/src/main/resources/data-init/img/**'
	classifier 'img'
	eachFile { fileCopyDetails ->
		fileCopyDetails.path = fileCopyDetails.path.replaceAll(".*/src/main/resources/data-demo/img/", '').replaceAll(".*/src/main/resources/data-init/img/", "")
	}
	destinationDir = new File("$buildDir/libs")
	includeEmptyDirs = false
}
